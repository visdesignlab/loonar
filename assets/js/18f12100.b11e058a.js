"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[60],{1911:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=i(4848),t=i(8453);const r={toc_max_heading_level:5},o="Prepare Your Microscopy Data",l={id:"getting-started-with-loon/data",title:"Prepare Your Microscopy Data",description:"Loon Will Guide You",source:"@site/docs/getting-started-with-loon/data.md",sourceDirName:"getting-started-with-loon",slug:"/getting-started-with-loon/data",permalink:"/loonar/docs/getting-started-with-loon/data",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/loonar/docs/getting-started-with-loon/"},next:{title:"Optional: Use Data from TrackMate",permalink:"/loonar/docs/getting-started-with-loon/trackmate-data"}},d={},a=[{value:"Loon Will Guide You",id:"loon-will-guide-you",level:2},{value:"Expected Data Format",id:"expected-data-format",level:2},{value:"Loon expects:",id:"loon-expects",level:3},{value:"Loon Data Specification",id:"loon-data-specification",level:2},{value:"<code>aa_index.json</code>: Define Your Experiments",id:"aa_indexjson-define-your-experiments",level:3},{value:"<code>aa_index.json</code> File Example:",id:"aa_indexjson-file-example",level:4},{value:"Experiments",id:"experiments",level:4},{value:"Experiment Metadata File Specifications",id:"experiment-metadata-file-specifications",level:4},{value:"<code>name</code>",id:"name",level:5},{value:"<code>headers</code>",id:"headers",level:5},{value:"<code>headerTransforms</code>",id:"headertransforms",level:5},{value:"<code>locationMetadataList</code>",id:"locationmetadatalist",level:5},{value:"<code>tags</code> (optional)",id:"tags-optional",level:5},{value:"<code>compositeTabularDataFile</code> (optional)",id:"compositetabulardatafile-optional",level:5},{value:"Imaging Location Folders",id:"imaging-location-folders",level:3},{value:"Cell Images",id:"cell-images",level:3},{value:"Segmentations Folder",id:"segmentations-folder",level:3},{value:"Cell Metadata <code>.csv</code>",id:"cell-metadata-csv",level:3}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"prepare-your-microscopy-data",children:"Prepare Your Microscopy Data"}),"\n",(0,s.jsx)(n.h2,{id:"loon-will-guide-you",children:"Loon Will Guide You"}),"\n",(0,s.jsx)(n.p,{children:"To use Loon, you must format your microscopy data according to Loon's requirements before uploading it."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Loon will handle"})," creating the full ",(0,s.jsx)(n.a,{href:"#expected-data-format",children:"expected data format below"})," for you."]}),"\n",(0,s.jsxs)(n.p,{children:["When uploading data, the Loon software ",(0,s.jsx)(n.strong,{children:"will prompt you"})," to:"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Create New Experiment"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Select Files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add one or more imaging locations, each with unique ID"}),"\n",(0,s.jsxs)(n.li,{children:["For each ",(0,s.jsx)(n.strong,{children:"imaging location"}),", you select:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:".zip"})," file of your ",(0,s.jsx)(n.strong,{children:"cell images"})]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:".zip"})," file of your ",(0,s.jsx)(n.strong,{children:"cell segmentations"})]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:".csv"})," file of your ",(0,s.jsx)(n.strong,{children:"cell metadata"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Define Cell Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You map required variables ",(0,s.jsx)(n.em,{children:"(e.g., frame, time, id, parent, mass, x, y)"})," to columns in your cell metadata ",(0,s.jsx)(n.code,{children:".csv"})," file."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Review"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Upload"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If using ",(0,s.jsx)(n.a,{href:"/loonar/docs/getting-started-with-loon/",children:(0,s.jsx)(n.strong,{children:"Local Loon"})})," instead, Loon will ",(0,s.jsx)(n.strong,{children:"not guide you"}),". You must prepare your data into the expected data format ",(0,s.jsx)(n.strong,{children:"yourself."}),(0,s.jsx)(n.br,{}),"\n","This removes the time burden of uploading to your server, however!"]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"expected-data-format",children:"Expected Data Format"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Overview Figure of data structure",src:i(2839).A+"",width:"1788",height:"989"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.h3,{id:"loon-expects",children:"Loon expects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Experiment ",(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Index"})})," ",(0,s.jsx)(n.code,{children:"aa_index.json"}),": Define your cell imaging experiments ",(0,s.jsx)(n.em,{children:"(E.g. Exp. 1, Exp. 2)"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Experiments"})})," ",(0,s.jsx)(n.code,{children:".json"}),": Metadata about this experiment ",(0,s.jsxs)(n.em,{children:["(experiment name, cell attribute names e.g. ",(0,s.jsx)(n.code,{children:"time"}),", ",(0,s.jsx)(n.code,{children:"mass"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Imaging Location"})})," folders each containing:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Images"})})," as a folder of ",(0,s.jsx)(n.code,{children:".tiff"})," files"]}),"\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Segmentations"})})," (boundaries outlining each cell) as a folder of as ",(0,s.jsx)(n.code,{children:"GeoJSON"})," files"]}),"\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.a,{href:"#define-your-experiments-aa_indexjson",children:(0,s.jsx)(n.strong,{children:"Metadata"})})," as a ",(0,s.jsx)(n.code,{children:".csv"})," file ",(0,s.jsxs)(n.em,{children:["(cell's ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"mass"}),", ",(0,s.jsx)(n.code,{children:"x"}),", ",(0,s.jsx)(n.code,{children:"y"})," etc. over ",(0,s.jsx)(n.code,{children:"time"}),")"]})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.strong,{children:"Recommended example file structure"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"your-microscopy-data/            # Your data file, choose any name\n\u251c\u2500\u2500 aa_index.json                # Defines your cell imaging experiments (e.g. Exp. 1, Exp. 2)\n\u251c\u2500\u2500 experiment_1/                # Your experiment file, any # of experiments, any names\n\u2502   \u251c\u2500\u2500 experiment_1.json        # Required metadata about this experiment (name, etc.)\n\u2502   \u251c\u2500\u2500 location_A/              # Your imaging location file, any # of loc's, choose any name\n\u2502   \u2502   \u251c\u2500\u2500 images_A/            # Folder of .tiff files (cell images)\n\u2502   \u2502   \u251c\u2500\u2500 segmentations_A/     # Folder of GeoJSON files (cell boundaries)\n\u2502   \u2502   \u2514\u2500\u2500 Table_A.csv          # Cell metadata (id, mass, x, y, etc. over time)\n\u2502   \u251c\u2500\u2500 location_B/\n\u2502   \u2502   \u251c\u2500\u2500 images_B/\n\u2502   \u2502   \u251c\u2500\u2500 segmentations_B/\n\u2502   \u2502   \u2514\u2500\u2500 Table_B.csv\n\u2502   \u2514\u2500\u2500 ...                      # More locations as needed\n\u251c\u2500\u2500 experiment_2/\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 ...\n"})})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Cell metadata and segmentations are not generated by Loon."}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsxs)(n.em,{children:["As an initial step in your workflow, we recommend using software such as ",(0,s.jsx)(n.a,{href:"https://www.phasefocus.com/livecyte",children:"LiveCyte"})," and/or ",(0,s.jsx)(n.a,{href:"https://imagej.net/plugins/trackmate/",children:"TrackMate"})," to generate metadata."]})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"loon-data-specification",children:"Loon Data Specification"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Optional Read"}),": If you'd like to learn more, we specify each data component below."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["If using ",(0,s.jsx)(n.a,{href:"/loonar/docs/getting-started-with-loon/",children:(0,s.jsx)(n.strong,{children:"Local Loon"})}),", you will ",(0,s.jsx)(n.strong,{children:"need to read"})," these specifications.",(0,s.jsx)(n.br,{}),"\n","Make sure to format your data file structure correctly ",(0,s.jsx)(n.a,{href:"#loon-expects-you-to-upload",children:"(see above)"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"aa_indexjson-define-your-experiments",children:[(0,s.jsx)(n.code,{children:"aa_index.json"}),": Define Your Experiments"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["This file contains a list of your experiment metadata files.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Required:"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'"experiments":'})," attribute."]}),"\n",(0,s.jsxs)(n.li,{children:["File must be in ",(0,s.jsxs)(n.a,{href:"https://www.w3schools.com/js/js_json_syntax.asp",children:[(0,s.jsx)(n.code,{children:".json"})," format"]}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Choose any names for your experiment files ",(0,s.jsx)(n.code,{children:'e.g. "experiment_1.json"'})]}),"\n",(0,s.jsxs)(n.h4,{id:"aa_indexjson-file-example",children:[(0,s.jsx)(n.code,{children:"aa_index.json"})," File Example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "experiments": [\n    "experiment_1.json",\n    "experiment_2.json",\n    "experiment_3.json",\n    "experiment_4.json",\n    "experiment_5.json",\n    "experiment_6.json",\n    "experiment_7.json",\n  ]\n}\n'})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"experiments",children:"Experiments"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Each of your imaging experiments"})," require an ",(0,s.jsx)(n.strong,{children:"experiment metadata file"})," as a ",(0,s.jsx)(n.code,{children:".json"})," file.",(0,s.jsx)(n.br,{}),"\n","This describes the experiment for Loon."]}),"\n",(0,s.jsxs)(n.p,{children:["In short, ",(0,s.jsxs)(n.strong,{children:["experiment metadata ",(0,s.jsx)(n.code,{children:".json"})," files"]})," require:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Definition"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:"Name of the experiment as it should appear in the Loon dashboard."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"headers"})}),(0,s.jsx)(n.td,{children:"The list of column names in the CSV feature tables. The order should match the CSV files."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"headerTransforms"})}),(0,s.jsxs)(n.td,{children:["Defines the name of certain special columns (",(0,s.jsx)(n.code,{children:"time"}),", ",(0,s.jsx)(n.code,{children:"frame"}),", ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"parent"}),", ",(0,s.jsx)(n.code,{children:"mass"}),", ",(0,s.jsx)(n.code,{children:"x"}),", ",(0,s.jsx)(n.code,{children:"y"}),"). This is optional if the name already exactly matches in headers. See ",(0,s.jsx)(n.a,{href:"#header-transforms",children:"the table below"})," for information about these special columns."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"locationMetadataList"})}),(0,s.jsxs)(n.td,{children:["A list of imaging location metadata. Each imaging location will include an ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"tabularDataFilename"}),", ",(0,s.jsx)(n.code,{children:"imageDataFilename"}),", and ",(0,s.jsx)(n.code,{children:"segmentationsFolder"}),". See ",(0,s.jsx)(n.a,{href:"#location-metadata-list",children:"the table below"})," for more information on each of these."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"compositeTabularDataFilename"})}),(0,s.jsxs)(n.td,{children:["Specifies the path to the combined tabular data file. See the ",(0,s.jsx)(n.a,{href:"#composite-tabular-data-file",children:"section below"})," for  more information."]})]})]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsxs)("summary",{children:[(0,s.jsx)(n.strong,{children:"Example:"})," Experiment Metadata ",(0,s.jsx)(n.code,{children:".json"})," File"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "name":"ExperimentOne",\n  "headers": [\n    "Frame",\n    "Tracking ID",\n    "Lineage ID",\n    "Position X (\xb5m)",\n    "Position Y (\xb5m)",\n    "Pixel Position X (pixels)",\n    "Pixel Position Y (pixels)",\n    "Volume (\xb5m\xb3)",\n    "Radius (\xb5m)",\n    "Area (\xb5m\xb2)",\n    "Sphericity ()",\n    "Dry Mass (pg)",\n    "Track Length (\xb5m)",\n    "Parent ID"\n  ],\n  "headerTransforms": {\n    "time": "Frame",\n    "frame": "Frame",\n    "id": "Tracking ID",\n    "parent": "Parent ID",\n    "mass": "Dry Mass (pg)",\n    "x": "Pixel Position X (pixels)",\n    "y": "Pixel Position Y (pixels)"\n  },\n  "compositeTabularDataFilename":"experiment1/composite_tabular_data_file.parquet",\n  "locationMetadataList": [\n    {\n      "id": "Condition A",\n      "tabularDataFilename": "experiment1/location_A/Table_A.csv",\n      "imageDataFilename": "experiment1/location_A/images_A.companion.ome",\n      "segmentationsFolder": "experiment1/location_A/segmentations_A",\n      "tags":{\n        "drug":"drug_1",\n        "concentration":"0.1"\n      }\n    },\n    {\n      "id": "Condition B",\n      "tabularDataFilename": "experiment1/location_B/Table_B.csv",\n      "imageDataFilename": "experiment1/location_B/images_B.companion.ome",\n      "segmentationsFolder": "experiment1/location_B/segmentations_B"\n      "tags":{}\n    },\n    {\n      "id": "Condition C",\n      "tabularDataFilename": "experiment1/location_C/Table_C.csv",\n      "imageDataFilename": "experiment1/location_C/images_C.companion.ome",\n      "segmentationsFolder": "experiment1/location_C/segmentations_C",\n      "tags":{\n        "drug":"drug_2",\n      }\n    }\n  ]\n}\n'})})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h4,{id:"experiment-metadata-file-specifications",children:"Experiment Metadata File Specifications"}),"\n",(0,s.jsx)(n.h5,{id:"name",children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"The name of the experiment as it should appear in the Loon dashboard."}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"headers",children:(0,s.jsx)(n.code,{children:"headers"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["The list of column names in your cell metadata ",(0,s.jsx)(n.code,{children:"csv"})," file"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"headertransforms",children:(0,s.jsx)(n.code,{children:"headerTransforms"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Definition"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"frame"})}),(0,s.jsx)(n.td,{children:"The frame number indicates which number image the data row comes from in a sequence of images."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"time"})}),(0,s.jsx)(n.td,{children:"The time when the image was recorded. Often this is relative to the start of the experiment. If this is not explicitly recorded, then the the frame number can be used as a proxy."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:"The unique ID for a particular tracked cell. This should be the same across frames for that cell's lifetime."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"parent"})}),(0,s.jsxs)(n.td,{children:["The ",(0,s.jsx)(n.code,{children:"id"})," of the parent cell. If this is not tracked at all for an experiment, then map this column to the same one as the ",(0,s.jsx)(n.code,{children:"id"})," column."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mass"})}),(0,s.jsx)(n.td,{children:"The mass of the cell."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"x"})}),(0,s.jsx)(n.td,{children:"The X coordinate for the cell's center position in pixel space. (It does not matter what definition of center is used.)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"y"})}),(0,s.jsx)(n.td,{children:"Same, but for the Y coordinate."})]})]})]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"locationmetadatalist",children:(0,s.jsx)(n.code,{children:"locationMetadataList"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Definition"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:"A unique name for this location. Can be anything, but will be displayed in the interface, so a more descriptive name is better."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tabularDataFilename"})}),(0,s.jsx)(n.td,{children:"The location of the CSV file feature table for this experiment."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"imageDataFilename"})}),(0,s.jsxs)(n.td,{children:["The location of the OME TIFF image file. This should be a ",(0,s.jsx)(n.code,{children:"*.companion.ome"})," file."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"segmentationsFolder"})}),(0,s.jsxs)(n.td,{children:["This folder contains all of the segmentation files for a given location. See the ",(0,s.jsx)(n.a,{href:"#segmentations-folder",children:"section on segmentations"})," for more details."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tags"})}),(0,s.jsxs)(n.td,{children:["A JSON object containing key-value pairs that capture metadata about the particular location. See the ",(0,s.jsx)(n.a,{href:"#tags",children:"tags section"})," for more information and some examples."]})]})]})]}),"\n"]}),"\n",(0,s.jsxs)(n.h5,{id:"tags-optional",children:[(0,s.jsx)(n.code,{children:"tags"})," (optional)"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Tags are used to define metadata (such as conditions) about an individual location. This is used in the Loon UI to specify specific conditions corresponding to the location. The tags object has no restrictions. For example, locations have have completely different sets of tags, locations may have no tags, and locations can overlap on one more tags."}),"\n",(0,s.jsx)(n.p,{children:"For example, suppose we have three locations. Your tags may look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "id": "location_1",\n    ...\n    "tags": {\n      "drug": "drug_1",\n      "concentration":"0.1"\n    }\n  },\n  {\n    "id": "location_2",\n    ...\n    "tags": {}\n  },\n  {\n    "id": "location_3",\n    ...\n    "tags": {\n      "drug": "drug_3"\n    }\n  }\n]\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.h5,{id:"compositetabulardatafile-optional",children:[(0,s.jsx)(n.code,{children:"compositeTabularDataFile"})," (optional)"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:'This key specifies the location (relative to the root of the current experiment directory) of a "combined metadata table" as a parquet file.'}),"\n",(0,s.jsx)(n.p,{children:"This table must be the union of each of the individual location metadata csv files with an additional location column and the union of all tags separated as columns as well."}),"\n",(0,s.jsxs)(n.p,{children:["For example, suppose we use the example from ",(0,s.jsx)(n.a,{href:"#tags",children:"tags section"}),". Then, a sample of 6 rows of our parquet file would be something like this:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"location"}),(0,s.jsx)(n.th,{children:"{rest_of_headers}"}),(0,s.jsx)(n.th,{children:"drug"}),(0,s.jsx)(n.th,{children:"concentration"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_1"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{children:"drug_1"}),(0,s.jsx)(n.td,{children:"0.1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_1"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{children:"drug_1"}),(0,s.jsx)(n.td,{children:"0.1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_2"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_2"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_3"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{children:"drug_3"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"location_3"}),(0,s.jsx)(n.td,{children:". . ."}),(0,s.jsx)(n.td,{children:"drug_3"}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Here, the empty spaces denote empty strings."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"imaging-location-folders",children:"Imaging Location Folders"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:"Imaging Location"})," is simply a folder containing a distinct imaging dataset of your choosing.",(0,s.jsx)(n.br,{}),"\n","Created at a distinct location, time, or for a specific purpose."]}),"\n",(0,s.jsx)(n.p,{children:"Imaging Location folders each contain:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.strong,{children:"Images"})," as a folder of ",(0,s.jsx)(n.code,{children:".tiff"})," files"]}),"\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.a,{href:"#segmentations-folder",children:(0,s.jsx)(n.strong,{children:"Segmentations"})})," (boundaries outlining each cell) as a folder of as ",(0,s.jsx)(n.code,{children:"GeoJSON"})," files"]}),"\n",(0,s.jsxs)(n.li,{children:["Cell ",(0,s.jsx)(n.strong,{children:"Metadata"})," as a ",(0,s.jsx)(n.code,{children:".csv"})," file ",(0,s.jsxs)(n.em,{children:["(cell's ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"mass"}),", ",(0,s.jsx)(n.code,{children:"x"}),", ",(0,s.jsx)(n.code,{children:"y"})," etc. over ",(0,s.jsx)(n.code,{children:"time"}),")"]})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cell-images",children:"Cell Images"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cell Images"})," is a folder of ",(0,s.jsx)(n.code,{children:".tiff"})," ",(0,s.jsx)(n.em,{children:"(image)"})," files ",(0,s.jsx)(n.strong,{children:"or"})," ",(0,s.jsx)(n.code,{children:".ome.tiff"})," ",(0,s.jsx)(n.em,{children:"(microscopy image)"})," files."]}),"\n",(0,s.jsxs)(n.p,{children:["We adhere to the ",(0,s.jsx)(n.a,{href:"https://docs.openmicroscopy.org/ome-model/5.6.3/ome-tiff/",children:"ome-tiff"})," library for cell images."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"segmentations-folder",children:"Segmentations Folder"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Each imaging location should have a corresponding folder that contains all of the segmentation files.",(0,s.jsx)(n.br,{}),"\n","The names of the files must correspond to the imaging frame.",(0,s.jsx)(n.br,{}),"\n","That is, ",(0,s.jsx)(n.code,{children:"1.json"})," will contain all of the cell segmentations for the first frame, ",(0,s.jsx)(n.code,{children:"2.json"})," will contain the second frame, and so on.",(0,s.jsx)(n.br,{}),"\n","Each JSON file must follow the GeoJSON specification.",(0,s.jsx)(n.br,{}),"\n","In addition to the standard geometry attribute, the ",(0,s.jsx)(n.code,{children:"bbox"})," attribute must be defined.",(0,s.jsx)(n.br,{}),"\n","To link the segmentations with the corresponding metadata, the cell ",(0,s.jsx)(n.code,{children:"id"})," defined in the feature table must be included as an ",(0,s.jsx)(n.code,{children:"ID"})," in the GeoJSON properties object."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Often, segmentations are instead generated as ",(0,s.jsx)(n.code,{children:"*.roi"})," files.",(0,s.jsx)(n.br,{}),"\n","When uploading using MinIO, Loon will automatically convert the ",(0,s.jsx)(n.code,{children:".roi"})," files to proper GeoJSON format.",(0,s.jsx)(n.br,{}),"\n","If you are instead using Loon without MinIO (i.e. using Local Loon), you will have to convert the ",(0,s.jsx)(n.code,{children:".roi"})," files to GeoJSON yourself.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/visdesignlab/aardvark-util/blob/main/roi_to_geojson.py",children:"Here"})," is a Python script which can convert ",(0,s.jsx)(n.code,{children:".roi"})," to GeoJSON from one of our accompanying repositories."]})}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"cell-metadata-csv",children:["Cell Metadata ",(0,s.jsx)(n.code,{children:".csv"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cell Metadata"})," is a ",(0,s.jsx)(n.code,{children:".csv"})," file of your choice containing:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rows"}),": A cell at a certain time point"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Columns"}),": Metadata about that cell"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example contents"}),":\n",(0,s.jsx)(n.code,{children:"example_metadata_table.csv"})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"CELL_ID"}),(0,s.jsx)(n.th,{children:"LOCATION"}),(0,s.jsx)(n.th,{children:"PARENT_CELL"}),(0,s.jsx)(n.th,{children:"TIME"}),(0,s.jsx)(n.th,{children:"FRAME"}),(0,s.jsx)(n.th,{children:"MASS"}),(0,s.jsx)(n.th,{children:"POSITION_X"}),(0,s.jsx)(n.th,{children:"POSITION_Y"}),(0,s.jsx)(n.th,{children:"..."})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"101"}),(0,s.jsx)(n.td,{children:"location_A"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"12.5"}),(0,s.jsx)(n.td,{children:"150"}),(0,s.jsx)(n.td,{children:"320"}),(0,s.jsx)(n.td,{children:"..."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"102"}),(0,s.jsx)(n.td,{children:"location_A"}),(0,s.jsx)(n.td,{children:"101"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"13.1"}),(0,s.jsx)(n.td,{children:"155"}),(0,s.jsx)(n.td,{children:"325"}),(0,s.jsx)(n.td,{children:"..."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"103"}),(0,s.jsx)(n.td,{children:"location_B"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"11.8"}),(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"310"}),(0,s.jsx)(n.td,{children:"..."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."}),(0,s.jsx)(n.td,{children:"..."})]})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Loon requires"})," these columns: ",(0,s.jsx)(n.code,{children:"frame"}),", ",(0,s.jsx)(n.code,{children:"time"}),", ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"parent"}),", ",(0,s.jsx)(n.code,{children:"mass"}),", ",(0,s.jsx)(n.code,{children:"x"}),", ",(0,s.jsx)(n.code,{children:"y"}),(0,s.jsx)(n.br,{}),"\n","Those required columns can be ",(0,s.jsx)(n.strong,{children:"named however you'd like"})," in your file, in any order (see ",(0,s.jsx)(n.a,{href:"#header-transforms",children:"header transforms"}),").",(0,s.jsx)(n.br,{}),"\n","You can add any other metadata columns you would like."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},2839:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/loon_data_structure-748fbaef2826e880d1cecdf49a64f448.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);